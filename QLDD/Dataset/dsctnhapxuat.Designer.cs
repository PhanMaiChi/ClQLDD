//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KPBT.Dataset {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsctnhapxuat")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsctnhapxuat : global::System.Data.DataSet {
        
        private nhxuDataTable tablenhxu;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsctnhapxuat() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsctnhapxuat(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["nhxu"] != null)) {
                    base.Tables.Add(new nhxuDataTable(ds.Tables["nhxu"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public nhxuDataTable nhxu {
            get {
                return this.tablenhxu;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsctnhapxuat cln = ((dsctnhapxuat)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["nhxu"] != null)) {
                    base.Tables.Add(new nhxuDataTable(ds.Tables["nhxu"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablenhxu = ((nhxuDataTable)(base.Tables["nhxu"]));
            if ((initTable == true)) {
                if ((this.tablenhxu != null)) {
                    this.tablenhxu.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsctnhapxuat";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsctnhapxuat.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablenhxu = new nhxuDataTable();
            base.Tables.Add(this.tablenhxu);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializenhxu() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsctnhapxuat ds = new dsctnhapxuat();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void nhxuRowChangeEventHandler(object sender, nhxuRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class nhxuDataTable : global::System.Data.TypedTableBase<nhxuRow> {
            
            private global::System.Data.DataColumn columnidnhxu;
            
            private global::System.Data.DataColumn columnidnxct;
            
            private global::System.Data.DataColumn columnmatp;
            
            private global::System.Data.DataColumn columntentp;
            
            private global::System.Data.DataColumn columndonvitinh;
            
            private global::System.Data.DataColumn columndongia;
            
            private global::System.Data.DataColumn columnchokho;
            
            private global::System.Data.DataColumn columnslnh;
            
            private global::System.Data.DataColumn columnslxu;
            
            private global::System.Data.DataColumn columnttnh;
            
            private global::System.Data.DataColumn columnttxu;
            
            private global::System.Data.DataColumn columnGC;
            
            private global::System.Data.DataColumn columnchatluong;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nhxuDataTable() {
                this.TableName = "nhxu";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal nhxuDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected nhxuDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idnhxuColumn {
                get {
                    return this.columnidnhxu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idnxctColumn {
                get {
                    return this.columnidnxct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn matpColumn {
                get {
                    return this.columnmatp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tentpColumn {
                get {
                    return this.columntentp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn donvitinhColumn {
                get {
                    return this.columndonvitinh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dongiaColumn {
                get {
                    return this.columndongia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chokhoColumn {
                get {
                    return this.columnchokho;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn slnhColumn {
                get {
                    return this.columnslnh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn slxuColumn {
                get {
                    return this.columnslxu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ttnhColumn {
                get {
                    return this.columnttnh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ttxuColumn {
                get {
                    return this.columnttxu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GCColumn {
                get {
                    return this.columnGC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chatluongColumn {
                get {
                    return this.columnchatluong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nhxuRow this[int index] {
                get {
                    return ((nhxuRow)(this.Rows[index]));
                }
            }
            
            public event nhxuRowChangeEventHandler nhxuRowChanging;
            
            public event nhxuRowChangeEventHandler nhxuRowChanged;
            
            public event nhxuRowChangeEventHandler nhxuRowDeleting;
            
            public event nhxuRowChangeEventHandler nhxuRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddnhxuRow(nhxuRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nhxuRow AddnhxuRow(double idnxct, string matp, string tentp, string donvitinh, double dongia, string chokho, double slnh, double slxu, double ttnh, double ttxu, string GC, string chatluong) {
                nhxuRow rownhxuRow = ((nhxuRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        idnxct,
                        matp,
                        tentp,
                        donvitinh,
                        dongia,
                        chokho,
                        slnh,
                        slxu,
                        ttnh,
                        ttxu,
                        GC,
                        chatluong};
                rownhxuRow.ItemArray = columnValuesArray;
                this.Rows.Add(rownhxuRow);
                return rownhxuRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nhxuRow FindByidnhxu(int idnhxu) {
                return ((nhxuRow)(this.Rows.Find(new object[] {
                            idnhxu})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                nhxuDataTable cln = ((nhxuDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new nhxuDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidnhxu = base.Columns["idnhxu"];
                this.columnidnxct = base.Columns["idnxct"];
                this.columnmatp = base.Columns["matp"];
                this.columntentp = base.Columns["tentp"];
                this.columndonvitinh = base.Columns["donvitinh"];
                this.columndongia = base.Columns["dongia"];
                this.columnchokho = base.Columns["chokho"];
                this.columnslnh = base.Columns["slnh"];
                this.columnslxu = base.Columns["slxu"];
                this.columnttnh = base.Columns["ttnh"];
                this.columnttxu = base.Columns["ttxu"];
                this.columnGC = base.Columns["GC"];
                this.columnchatluong = base.Columns["chatluong"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidnhxu = new global::System.Data.DataColumn("idnhxu", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidnhxu);
                this.columnidnxct = new global::System.Data.DataColumn("idnxct", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidnxct);
                this.columnmatp = new global::System.Data.DataColumn("matp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatp);
                this.columntentp = new global::System.Data.DataColumn("tentp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntentp);
                this.columndonvitinh = new global::System.Data.DataColumn("donvitinh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndonvitinh);
                this.columndongia = new global::System.Data.DataColumn("dongia", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndongia);
                this.columnchokho = new global::System.Data.DataColumn("chokho", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchokho);
                this.columnslnh = new global::System.Data.DataColumn("slnh", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslnh);
                this.columnslxu = new global::System.Data.DataColumn("slxu", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslxu);
                this.columnttnh = new global::System.Data.DataColumn("ttnh", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnttnh);
                this.columnttxu = new global::System.Data.DataColumn("ttxu", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnttxu);
                this.columnGC = new global::System.Data.DataColumn("GC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGC);
                this.columnchatluong = new global::System.Data.DataColumn("chatluong", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchatluong);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidnhxu}, true));
                this.columnidnhxu.AutoIncrement = true;
                this.columnidnhxu.AutoIncrementSeed = -1;
                this.columnidnhxu.AutoIncrementStep = -1;
                this.columnidnhxu.AllowDBNull = false;
                this.columnidnhxu.Unique = true;
                this.columnmatp.MaxLength = 50;
                this.columntentp.MaxLength = 130;
                this.columndonvitinh.MaxLength = 50;
                this.columnchokho.MaxLength = 50;
                this.columnGC.MaxLength = 250;
                this.columnchatluong.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nhxuRow NewnhxuRow() {
                return ((nhxuRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new nhxuRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(nhxuRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.nhxuRowChanged != null)) {
                    this.nhxuRowChanged(this, new nhxuRowChangeEvent(((nhxuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.nhxuRowChanging != null)) {
                    this.nhxuRowChanging(this, new nhxuRowChangeEvent(((nhxuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.nhxuRowDeleted != null)) {
                    this.nhxuRowDeleted(this, new nhxuRowChangeEvent(((nhxuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.nhxuRowDeleting != null)) {
                    this.nhxuRowDeleting(this, new nhxuRowChangeEvent(((nhxuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovenhxuRow(nhxuRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsctnhapxuat ds = new dsctnhapxuat();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "nhxuDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class nhxuRow : global::System.Data.DataRow {
            
            private nhxuDataTable tablenhxu;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal nhxuRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablenhxu = ((nhxuDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idnhxu {
                get {
                    return ((int)(this[this.tablenhxu.idnhxuColumn]));
                }
                set {
                    this[this.tablenhxu.idnhxuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double idnxct {
                get {
                    try {
                        return ((double)(this[this.tablenhxu.idnxctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idnxct\' in table \'nhxu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenhxu.idnxctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string matp {
                get {
                    try {
                        return ((string)(this[this.tablenhxu.matpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'matp\' in table \'nhxu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenhxu.matpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tentp {
                get {
                    try {
                        return ((string)(this[this.tablenhxu.tentpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tentp\' in table \'nhxu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenhxu.tentpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string donvitinh {
                get {
                    try {
                        return ((string)(this[this.tablenhxu.donvitinhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'donvitinh\' in table \'nhxu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenhxu.donvitinhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double dongia {
                get {
                    try {
                        return ((double)(this[this.tablenhxu.dongiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dongia\' in table \'nhxu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenhxu.dongiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chokho {
                get {
                    try {
                        return ((string)(this[this.tablenhxu.chokhoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chokho\' in table \'nhxu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenhxu.chokhoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double slnh {
                get {
                    try {
                        return ((double)(this[this.tablenhxu.slnhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slnh\' in table \'nhxu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenhxu.slnhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double slxu {
                get {
                    try {
                        return ((double)(this[this.tablenhxu.slxuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slxu\' in table \'nhxu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenhxu.slxuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ttnh {
                get {
                    try {
                        return ((double)(this[this.tablenhxu.ttnhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ttnh\' in table \'nhxu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenhxu.ttnhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ttxu {
                get {
                    try {
                        return ((double)(this[this.tablenhxu.ttxuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ttxu\' in table \'nhxu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenhxu.ttxuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GC {
                get {
                    try {
                        return ((string)(this[this.tablenhxu.GCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GC\' in table \'nhxu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenhxu.GCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chatluong {
                get {
                    try {
                        return ((string)(this[this.tablenhxu.chatluongColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chatluong\' in table \'nhxu\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenhxu.chatluongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidnxctNull() {
                return this.IsNull(this.tablenhxu.idnxctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidnxctNull() {
                this[this.tablenhxu.idnxctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmatpNull() {
                return this.IsNull(this.tablenhxu.matpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmatpNull() {
                this[this.tablenhxu.matpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstentpNull() {
                return this.IsNull(this.tablenhxu.tentpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettentpNull() {
                this[this.tablenhxu.tentpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdonvitinhNull() {
                return this.IsNull(this.tablenhxu.donvitinhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdonvitinhNull() {
                this[this.tablenhxu.donvitinhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdongiaNull() {
                return this.IsNull(this.tablenhxu.dongiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdongiaNull() {
                this[this.tablenhxu.dongiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschokhoNull() {
                return this.IsNull(this.tablenhxu.chokhoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchokhoNull() {
                this[this.tablenhxu.chokhoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsslnhNull() {
                return this.IsNull(this.tablenhxu.slnhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetslnhNull() {
                this[this.tablenhxu.slnhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsslxuNull() {
                return this.IsNull(this.tablenhxu.slxuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetslxuNull() {
                this[this.tablenhxu.slxuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsttnhNull() {
                return this.IsNull(this.tablenhxu.ttnhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetttnhNull() {
                this[this.tablenhxu.ttnhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsttxuNull() {
                return this.IsNull(this.tablenhxu.ttxuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetttxuNull() {
                this[this.tablenhxu.ttxuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGCNull() {
                return this.IsNull(this.tablenhxu.GCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGCNull() {
                this[this.tablenhxu.GCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschatluongNull() {
                return this.IsNull(this.tablenhxu.chatluongColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchatluongNull() {
                this[this.tablenhxu.chatluongColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class nhxuRowChangeEvent : global::System.EventArgs {
            
            private nhxuRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nhxuRowChangeEvent(nhxuRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nhxuRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591